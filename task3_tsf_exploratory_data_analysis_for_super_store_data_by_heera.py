# -*- coding: utf-8 -*-
"""Task3-TSF-Exploratory data analysis for super store data by heera.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1j4KQ7wQDHsQ-IZy9raYEat7QdNdBJt_X

# HEERA'S EXPLORATORY DATA ANALYSIS FOR SAMPLE SUPER STORE DATA
"""

##Importing required libraries

import pandas as pd                         ##data manipulation & analysis
import numpy as np                          ##for arrays, Linear algebra & matrices
import seaborn as sns                       ## data visualisation, drawings, informative statistic
import os                                   # for os functions just incase
import matplotlib.pyplot as plt             ## data visualisation, graphs
from sklearn import datasets                ## to import inbuilt datasets

"""Importing the data and getting familiar with data"""

mydata = pd.read_csv("/content/SampleSuperstore.csv")  ##Importing dataset
mydata                                                 ##viewing data

"""Statistics about data"""

mydata.describe() ##Mean, Min, Max, Std deviation etc

"""Information about data"""

mydata.info() ## to know the data types in our data

"""Display First 5 rows"""

mydata.head()

"""Display the Last 5 Rows"""

mydata.tail()

"""Checking for Null values"""

mydata.isnull().sum()

## There are no null values 

## To know the shape of the data frame

mydata.shape ## No of rows & No of columns

"""Lets display the columns names"""

mydata.columns

"""Now, Let us check for duplicate Values"""

mydata.duplicated().sum()

mydata.nunique() ## count the distinct observations

"""Now lets drop the duplicate values"""

mydata.drop_duplicates(inplace=True)

mydata.duplicated().sum()   ##Now there are no duplicate values

"""#Data visualisation

1.   Plotting histograms categorically
"""

fig, ax = plt.subplots()
ax.hist(mydata['Ship Mode'], color=['red'])

## setting titles & Labels
ax.set_title("Shipmode vs frequency")
ax.set_xlabel("Ship mode")
ax.set_ylabel("Frequency")

fig, ax = plt.subplots()
ax.hist(mydata['Segment'], color=['green'])

## setting titles & Labels
ax.set_title("Segment vs frequency")
ax.set_xlabel("Segment")
ax.set_ylabel("Frequency")

fig, ax = plt.subplots()
ax.hist(mydata['Country'], color=['blue'])

## setting titles & Labels
ax.set_title("Country vs frequency")
ax.set_xlabel("Country")
ax.set_ylabel("Frequency")

plt.figure(figsize=(22,6))
sns.countplot(x=mydata['City'], order=mydata['City'].value_counts().head(20).index, orient=90)

## setting titles & Labels
plt.title("City vs frequency")
plt.xlabel("City")
plt.ylabel("Frequency")

"""As we can observe, New york has the highest record & both Phoenix & long beach have equivalent"""

plt.figure(figsize=(22,5))
sns.countplot(x=mydata['State'], order=mydata['State'].value_counts().head(20).index, orient=90)

## setting titles & Labels
plt.title("State vs frequency")
plt.xlabel("State")
plt.ylabel("Frequency")

plt.figure(figsize=(15,6))
sns.countplot(x=mydata['Region'], order=mydata['Region'].value_counts().head(20).index, hue=mydata['Region'], orient=90)

## setting titles & Labels
plt.title("Region vs frequency")
plt.xlabel("Region")
plt.ylabel("Frequency")

"""here, by Region vs Frequency chart we can say that Wetern area clients result in more profit to us than the other 3 regions."""

plt.figure(figsize=(10,6))
sns.countplot(x=mydata['Category'], order=mydata['Category'].value_counts().head(20).index,hue=mydata['Category'], orient=90)

## setting titles & Labels
plt.title("Category vs frequency")
plt.xlabel("Category")
plt.ylabel("Frequency")

"""Here in the graph of category vs frequency we can say that office supplies are in the limelight than furniture & technology."""

plt.figure(figsize=(15,6))
sns.countplot(x=mydata['Sub-Category'], order=mydata['Sub-Category'].value_counts().head(20).index, hue=mydata['Sub-Category'], orient=90)

## setting titles & Labels
plt.title("Sub-Category vs frequency")
plt.xlabel("Sub-Category")
plt.ylabel("Frequency")

"""2.Bar Graphs"""

mydata.groupby('Ship Mode')['Sales','Profit'].sum().plot.bar()
plt.xlabel("Shipmode")
plt.ylabel("Sales and Profit")
plt.title("Shipmode vs Sales & Profit")

mydata.groupby('Segment')['Sales','Profit'].sum().plot.bar()
plt.xlabel("Segment")
plt.ylabel("Sales and Profit")
plt.title("Segment vs Sales & Profit")

"""In this segment vs sales & profit we can observe that profit is very less even though sales happen a lot which is inevitable.We can do something to increase our profits like-
1)Getting feedbacks 
2) Customer interaction programs 
3) Free cuopons on buying bulk
"""

mydata.groupby('Region')['Sales','Profit','Quantity'].sum().plot.bar()
plt.xlabel("Region")
plt.ylabel("Sales, Profit, Quantiy")
plt.title("Region vs Sales,Profit & Quantity")

mydata.groupby('Category')['Sales','Profit','Quantity'].sum().plot.bar()
plt.xlabel("Category")
plt.ylabel("Sales, Profit, Quantiy")
plt.title("Category vs Sales,Profit & Quantity")

mydata.groupby('Sub-Category')['Sales','Profit','Quantity'].sum().plot.bar()
plt.xlabel("Sub-Category")
plt.ylabel("Sales, Profit, Quantiy")
plt.title("Sub-Category vs Sales,Profit & Quantity")

mydata.groupby('Quantity')['Discount'].sum().plot.bar()
plt.xlabel("Quantity")
plt.ylabel(" Discount")
plt.title("Quantity vs Discount")



mydata.groupby('State')['Sales','Profit'].sum().plot.bar(figsize=(15,9))
plt.xlabel("State")
plt.ylabel("Sales and Profit")
plt.title("States vs Sales & Profit")

"""3.SCATTER PLOTS"""

sns.scatterplot(x=mydata['Sales'],y=mydata['Profit'])

"""No relation between Sales & Profit"""

sns.scatterplot(x=mydata['Quantity'],y=mydata['Profit'], color=['black'])

sns.scatterplot(x=mydata['Ship Mode'],y=mydata['Sales'], color=['yellow'])

sns.scatterplot(x=mydata['Segment'],y=mydata['Sales'], color=['orange'])

sns.scatterplot(x=mydata['Category'],y=mydata['Sales'],hue_order='Category')

"""4.Line charts"""

sns.lineplot(x=mydata['Quantity'], y=mydata['Profit'])
plt.title("Quantity vs Profit")

sns.lineplot(x=mydata['Sales'], y=mydata['Profit'])
plt.title("Sales vs Profit")

sns.lineplot(x=mydata['Quantity'], y=mydata['Discount'])
plt.title("Quantity vs Discount")

sns.lineplot(x=mydata['Region'], y=mydata['Sales'])
plt.title("Region vs Sales")

"""5.Co-Relation Matrices"""

corr= mydata.corr()
sns.heatmap(corr, annot=True, cmap='hot')

##Dropping postal code column
mydata=mydata.drop(['Postal Code'],axis=1)

"""6.Pair Plots"""

sns.pairplot(mydata,hue='Ship Mode')

sns.pairplot(mydata,hue='Segment')

sns.pairplot(mydata,hue='Region')

sns.pairplot(mydata,hue='Category')

sns.pairplot(mydata,hue='Sub-Category')

"""Value Counts"""

mydata['Segment'].value_counts()

mydata['Ship Mode'].value_counts()

mydata['Country'].value_counts()

mydata['State'].value_counts()

mydata['City'].value_counts()

mydata['Region'].value_counts()

mydata['Category'].value_counts()

mydata['Sub-Category'].value_counts()

"""7.Pie Charts"""

plt.figure(figsize=(12,9))
mydata['Category'].value_counts().plot.pie()
plt.show()

plt.figure(figsize=(12,9))
mydata['Sub-Category'].value_counts().plot.pie()
plt.show()

plt.figure(figsize=(12,9))
mydata['Segment'].value_counts().plot.pie()
plt.show()

plt.figure(figsize=(12,9))
mydata['Ship Mode'].value_counts().plot.pie()
plt.show()

plt.figure(figsize=(12,9))
mydata['Region'].value_counts().plot.pie()
plt.show()

plt.figure(figsize=(20,20))
mydata['State'].value_counts().plot.pie()
plt.show()

"""# Observations

Over here we can understand that Standard class has the highest frequency where as same day has lowest frequency so here we can derive 2 things-
1) To make "Same day" mode more attractive to our customers.
2) To " Slightly increase" the default shipment charge for standard classwhich allows the store to gain profits gradually.

In this Segment vs frequency graph we can observe that -
1)Consumer segment makes the highest purchasals followed by corporate and home office.
2)We could provide memberships and avail discounts on bulk purchasals for the home office & corporate segments for our benefits.
"""